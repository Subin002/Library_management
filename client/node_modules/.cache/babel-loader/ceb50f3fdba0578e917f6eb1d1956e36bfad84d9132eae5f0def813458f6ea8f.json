{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBIN DAS K\\\\Projects\\\\Library management\\\\client\\\\src\\\\components\\\\home\\\\Orderhistory.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Orderhistory() {\n  _s();\n  const [orderedData, setOrderData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:1500/ordered');\n        console.log('API response:', response.data); // Log the response to check the format\n\n        // Check if the response data is an array and update the state accordingly\n        if (Array.isArray(response.data)) {\n          setOrderData(response.data);\n        } else if (response.data && response.data.books) {\n          setOrderData(response.data.books);\n        } else {\n          console.error('Invalid response format:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching orders books:', error);\n        setError('Error fetching orders books: ' + error.message);\n      }\n    };\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full06\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h207\",\n      children: \"ORDERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-styled-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Debitcard No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orderedData.length > 0 ? orderedData.map(ordered => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordered.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordered.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-description\",\n              children: ordered.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordered.productname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordered.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordered.debitCardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)]\n          }, ordered._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              children: \"No new books found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Orderhistory, \"hvCMJFrQsDBLJrdcUx1MVzASPKU=\");\n_c = Orderhistory;\nexport default Orderhistory;\nvar _c;\n$RefreshReg$(_c, \"Orderhistory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Orderhistory","_s","orderedData","setOrderData","useState","error","setError","useEffect","fetchOrders","response","axios","get","console","log","data","Array","isArray","books","message","className","children","Nav","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ordered","name","email","address","productname","price","debitCardNumber","_id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/SUBIN DAS K/Projects/Library management/client/src/components/home/Orderhistory.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Orderhistory() {\r\n    const [orderedData, setOrderData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchOrders = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:1500/ordered');\r\n                console.log('API response:', response.data); // Log the response to check the format\r\n                \r\n                // Check if the response data is an array and update the state accordingly\r\n                if (Array.isArray(response.data)) {\r\n                    setOrderData(response.data);\r\n                } else if (response.data && response.data.books) {\r\n                    setOrderData(response.data.books);\r\n                } else {\r\n                    console.error('Invalid response format:', response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching orders books:', error);\r\n                setError('Error fetching orders books: ' + error.message);\r\n            }\r\n        };\r\n\r\n        fetchOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='full06'>\r\n            <Nav />\r\n            <h2 className='h207'>ORDERS</h2>\r\n            <div className='order-container'>\r\n                {error && <p className='error'>{error}</p>}\r\n                <table className='order-styled-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Address</th>\r\n                            <th>Product Name</th>\r\n                            <th>Price</th>\r\n                            <th>Debitcard No</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orderedData.length > 0 ? (\r\n                            orderedData.map(ordered => (\r\n                                <tr key={ordered._id}>\r\n                                    <td>{ordered.name}</td>\r\n                                    <td>{ordered.email}</td>\r\n                                    <td className='order-description'>{ordered.address}</td>\r\n                                    <td>{ordered.productname}</td>\r\n                                    <td>{ordered.price}</td>\r\n                                    <td>{ordered.debitCardNumber}</td>\r\n                                </tr>\r\n                            ))\r\n                        ) : (\r\n                            <tr>\r\n                                <td colSpan=\"7\">No new books found</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Orderhistory\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}