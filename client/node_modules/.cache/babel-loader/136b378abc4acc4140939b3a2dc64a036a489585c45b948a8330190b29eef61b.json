{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBIN DAS K\\\\Projects\\\\Library management\\\\client\\\\src\\\\components\\\\admin\\\\newbook\\\\AdBookform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Adbookform.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdBookform() {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [id, setId] = useState('');\n  const [rating, setRating] = useState('');\n  const [price, setPrice] = useState('');\n  const [file, setFile] = useState(null);\n  const [category, setCategory] = useState('');\n  const [categoryData, setCategoryData] = useState([]); // State for category data\n\n  useEffect(() => {\n    // Fetch data based on selected category\n    if (category === 'international') {\n      // Example: Fetch international category data\n      axios.get('http://localhost:1500/internationalData').then(response => {\n        setCategoryData(response.data);\n      }).catch(error => {\n        console.error('Error fetching international data:', error);\n      });\n    } else if (category === 'award-wins') {\n      // Example: Fetch award wins category data\n      axios.get('http://localhost:1500/awardWinsData').then(response => {\n        setCategoryData(response.data);\n      }).catch(error => {\n        console.error('Error fetching award wins data:', error);\n      });\n    }\n    // Add more conditions to fetch data for other categories as needed\n  }, [category]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Basic validation\n      if (!name || !id || !description || !rating || !price || !file || !category) {\n        console.error('Please fill in all fields');\n        return;\n      }\n\n      // Create FormData object\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('id', id);\n      formData.append('description', description);\n      formData.append('rating', rating);\n      formData.append('price', price);\n      formData.append('category', category);\n      formData.append('image', file);\n\n      // Send POST request with FormData\n      const response = await axios.post('http://localhost:1500/postnewbook', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('New book created:', response.data);\n\n      // Clear form fields after successful submission\n      setTimeout(() => {\n        setName('');\n        setDescription('');\n        setId('');\n        setRating('');\n        setPrice('');\n        setCategory('');\n        setFile(null); // Clear the file state\n      }, 100); // Adjust the delay time as needed\n    } catch (error) {\n      console.error('Error creating new book:', error);\n    }\n  };\n  const handleRatingChange = e => {\n    const value = Math.min(Math.max(0, parseInt(e.target.value)), 5);\n    setRating(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full05\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container05\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"h205\",\n        children: \"BOOK ENTRY FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box05\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            name: \"category\",\n            onChange: e => setCategory(e.target.value),\n            value: category,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new-arrivals\",\n              children: \"New arrivals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"international\",\n              children: \"International\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"award-wins\",\n              children: \"Award wins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), categoryData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Additional Data for \", category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: categoryData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.name\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit05\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(AdBookform, \"ANzx3gMIXIGiTDFUduye8tna894=\");\n_c = AdBookform;\nexport default AdBookform;\nvar _c;\n$RefreshReg$(_c, \"AdBookform\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdBookform","_s","name","setName","description","setDescription","id","setId","rating","setRating","price","setPrice","file","setFile","category","setCategory","categoryData","setCategoryData","get","then","response","data","catch","error","console","handleSubmit","e","preventDefault","formData","FormData","append","post","headers","log","setTimeout","handleRatingChange","value","Math","min","max","parseInt","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","htmlFor","onChange","length","map","item","type","_c","$RefreshReg$"],"sources":["C:/Users/SUBIN DAS K/Projects/Library management/client/src/components/admin/newbook/AdBookform.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Adbookform.css';\r\nimport axios from 'axios';\r\n\r\nfunction AdBookform() {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [rating, setRating] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const [category, setCategory] = useState('');\r\n    const [categoryData, setCategoryData] = useState([]); // State for category data\r\n\r\n    useEffect(() => {\r\n        // Fetch data based on selected category\r\n        if (category === 'international') {\r\n            // Example: Fetch international category data\r\n            axios.get('http://localhost:1500/internationalData')\r\n                .then(response => {\r\n                    setCategoryData(response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching international data:', error);\r\n                });\r\n        } else if (category === 'award-wins') {\r\n            // Example: Fetch award wins category data\r\n            axios.get('http://localhost:1500/awardWinsData')\r\n                .then(response => {\r\n                    setCategoryData(response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching award wins data:', error);\r\n                });\r\n        }\r\n        // Add more conditions to fetch data for other categories as needed\r\n    }, [category]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Basic validation\r\n            if (!name || !id || !description || !rating || !price || !file || !category) {\r\n                console.error('Please fill in all fields');\r\n                return;\r\n            }\r\n\r\n            // Create FormData object\r\n            const formData = new FormData();\r\n            formData.append('name', name);\r\n            formData.append('id', id);\r\n            formData.append('description', description);\r\n            formData.append('rating', rating);\r\n            formData.append('price', price);\r\n            formData.append('category', category);\r\n            formData.append('image', file);\r\n\r\n            // Send POST request with FormData\r\n            const response = await axios.post('http://localhost:1500/postnewbook', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n\r\n            console.log('New book created:', response.data);\r\n\r\n            // Clear form fields after successful submission\r\n            setTimeout(() => {\r\n                setName('');\r\n                setDescription('');\r\n                setId('');\r\n                setRating('');\r\n                setPrice('');\r\n                setCategory('');\r\n                setFile(null); // Clear the file state\r\n            }, 100); // Adjust the delay time as needed\r\n\r\n        } catch (error) {\r\n            console.error('Error creating new book:', error);\r\n        }\r\n    };\r\n\r\n    const handleRatingChange = (e) => {\r\n        const value = Math.min(Math.max(0, parseInt(e.target.value)), 5);\r\n        setRating(value);\r\n    };\r\n\r\n    return (\r\n        <div className='full05'>\r\n            <div className='container05'>\r\n                <h2 className='h205'>BOOK ENTRY FORM</h2>\r\n                <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n\r\n                    {/* Other form inputs */}\r\n\r\n                    <div className='box05'>\r\n                        <label htmlFor=\"category\">Category:</label>\r\n                        <select\r\n                            id=\"category\"\r\n                            name=\"category\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                            value={category}\r\n                        >\r\n                            <option value=\"\">Select Category</option>\r\n                            <option value=\"new-arrivals\">New arrivals</option>\r\n                            <option value=\"international\">International</option>\r\n                            <option value=\"award-wins\">Award wins</option>\r\n                            {/* Add more options as needed */}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Display additional data based on selected category */}\r\n                    {categoryData.length > 0 && (\r\n                        <div>\r\n                            <h3>Additional Data for {category}</h3>\r\n                            <ul>\r\n                                {categoryData.map(item => (\r\n                                    <li key={item.id}>{item.name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n\r\n                    <button type='submit' className='submit05'>Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdBookform;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,EAAE,EAAEC,KAAK,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtDC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIkB,QAAQ,KAAK,eAAe,EAAE;MAC9B;MACAjB,KAAK,CAACqB,GAAG,CAAC,yCAAyC,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAI;QACdH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC;MAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACV,CAAC,MAAM,IAAIT,QAAQ,KAAK,YAAY,EAAE;MAClC;MACAjB,KAAK,CAACqB,GAAG,CAAC,qCAAqC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;QACdH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC;MAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IACV;IACA;EACJ,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA;MACA,IAAI,CAACzB,IAAI,IAAI,CAACI,EAAE,IAAI,CAACF,WAAW,IAAI,CAACI,MAAM,IAAI,CAACE,KAAK,IAAI,CAACE,IAAI,IAAI,CAACE,QAAQ,EAAE;QACzEU,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACJ;;MAEA;MACA,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE5B,IAAI,CAAC;MAC7B0B,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAExB,EAAE,CAAC;MACzBsB,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE1B,WAAW,CAAC;MAC3CwB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEtB,MAAM,CAAC;MACjCoB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEpB,KAAK,CAAC;MAC/BkB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEhB,QAAQ,CAAC;MACrCc,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAElB,IAAI,CAAC;;MAE9B;MACA,MAAMQ,QAAQ,GAAG,MAAMvB,KAAK,CAACkC,IAAI,CAAC,mCAAmC,EAAEH,QAAQ,EAAE;QAC7EI,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFR,OAAO,CAACS,GAAG,CAAC,mBAAmB,EAAEb,QAAQ,CAACC,IAAI,CAAC;;MAE/C;MACAa,UAAU,CAAC,MAAM;QACb/B,OAAO,CAAC,EAAE,CAAC;QACXE,cAAc,CAAC,EAAE,CAAC;QAClBE,KAAK,CAAC,EAAE,CAAC;QACTE,SAAS,CAAC,EAAE,CAAC;QACbE,QAAQ,CAAC,EAAE,CAAC;QACZI,WAAW,CAAC,EAAE,CAAC;QACfF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACnB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAEb,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAMY,kBAAkB,GAAIT,CAAC,IAAK;IAC9B,MAAMU,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACd,CAAC,CAACe,MAAM,CAACL,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChE3B,SAAS,CAAC2B,KAAK,CAAC;EACpB,CAAC;EAED,oBACIrC,OAAA;IAAK2C,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnB5C,OAAA;MAAK2C,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB5C,OAAA;QAAI2C,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzChD,OAAA;QAAMiD,QAAQ,EAAEvB,YAAa;QAACwB,OAAO,EAAC,qBAAqB;QAAAN,QAAA,gBAIvD5C,OAAA;UAAK2C,SAAS,EAAC,OAAO;UAAAC,QAAA,gBAClB5C,OAAA;YAAOmD,OAAO,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3ChD,OAAA;YACIO,EAAE,EAAC,UAAU;YACbJ,IAAI,EAAC,UAAU;YACfiD,QAAQ,EAAGzB,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACe,MAAM,CAACL,KAAK,CAAE;YAC7CA,KAAK,EAAEtB,QAAS;YAAA6B,QAAA,gBAEhB5C,OAAA;cAAQqC,KAAK,EAAC,EAAE;cAAAO,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACzChD,OAAA;cAAQqC,KAAK,EAAC,cAAc;cAAAO,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClDhD,OAAA;cAAQqC,KAAK,EAAC,eAAe;cAAAO,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpDhD,OAAA;cAAQqC,KAAK,EAAC,YAAY;cAAAO,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EAGL/B,YAAY,CAACoC,MAAM,GAAG,CAAC,iBACpBrD,OAAA;UAAA4C,QAAA,gBACI5C,OAAA;YAAA4C,QAAA,GAAI,sBAAoB,EAAC7B,QAAQ;UAAA;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvChD,OAAA;YAAA4C,QAAA,EACK3B,YAAY,CAACqC,GAAG,CAACC,IAAI,iBAClBvD,OAAA;cAAA4C,QAAA,EAAmBW,IAAI,CAACpD;YAAI,GAAnBoD,IAAI,CAAChD,EAAE;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CACpC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACR,eAEDhD,OAAA;UAAQwD,IAAI,EAAC,QAAQ;UAACb,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9C,EAAA,CA7HQD,UAAU;AAAAwD,EAAA,GAAVxD,UAAU;AA+HnB,eAAeA,UAAU;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}